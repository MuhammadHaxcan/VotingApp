@{
    ViewData["Title"] = "Create Candidate";
}

<div class="card">
    <div class="card-header bg-primary text-white">
        <h2>Create Candidate</h2>
    </div>
    <div class="card-body">
        <form method="post">
            <div class="form-group">
                <label for="name">Name</label>
                <input type="text" name="name" class="form-control" placeholder="Enter candidate's name" required>
            </div>
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" name="email" class="form-control" placeholder="Enter candidate's email" required>
            </div>
            <div class="form-group">
                <label for="nic">NIC</label>
                <input type="text" name="nic" class="form-control" placeholder="Enter candidate's NIC (13 digits)" required>
                <small class="form-text text-muted">NIC must be exactly 13 characters long.</small>
            </div>
            <div class="form-group">
                <label for="electionId">Election</label>
                <select name="electionId" class="form-control">
                    @foreach (var election in ViewBag.Elections)
                    {
                        <option value="@election.Id">@election.Name</option>
                    }
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </form>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success mt-3">@TempData["SuccessMessage"]</div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger mt-3">@TempData["ErrorMessage"]</div>
}

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger mt-3">
        <h5>Validation Errors:</h5>
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}